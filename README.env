# Environment Setup Guide

This guide explains how to set up the personal configuration files that contain system-specific paths and credentials.

## Required Personal Configuration Files

Two files need to be created with your personal paths and credentials:

### 1. `start_mcp_server_with_env.sh`

This script sets environment variables and starts the MCP server. Create this file in the project root with the following structure:

```bash
#!/bin/bash

# ServiceNow MCP Server Startup Script with Environment
# This ensures all environment variables are properly set before starting the server

# Change to the correct directory - UPDATE THIS PATH
cd "/YOUR/ABSOLUTE/PATH/TO/ServiceNow MCP Server"

# Set all required environment variables
export PYTHONPATH="/YOUR/ABSOLUTE/PATH/TO/ServiceNow MCP Server"
export SERVICENOW_INSTANCE_URL="https://your-instance.service-now.com/"
export SERVICENOW_CLIENT_ID="your-client-id-here"
export SERVICENOW_CLIENT_SECRET="your-client-secret-here"
export JWT_SECRET_KEY="your-jwt-secret-key-here"
export JWT_ALGORITHM="HS256"
export JWT_EXPIRATION_HOURS="24"
export LOG_LEVEL="info"
export LOG_FORMAT="json"
export AUTH_TIMEOUT_SECONDS="300"
export SESSION_REFRESH_THRESHOLD_SECONDS="600"
export MAX_CONCURRENT_SESSIONS="100"
export SERVICENOW_API_TIMEOUT="30"
export SERVICENOW_MAX_RETRIES="3"
export SERVICENOW_RETRY_DELAY="1.0"

# Start the server with the virtual environment Python - UPDATE THIS PATH
exec "/YOUR/ABSOLUTE/PATH/TO/ServiceNow MCP Server/venv/bin/python" -m servicenow_mcp_server.main
```

**Steps to create:**
1. Copy the template above
2. Replace `/YOUR/ABSOLUTE/PATH/TO/ServiceNow MCP Server` with your actual project path
3. Replace ServiceNow credentials with your actual values
4. Save as `start_mcp_server_with_env.sh` in the project root
5. Make it executable: `chmod +x start_mcp_server_with_env.sh`

### 2. `claude_desktop_config.json`

This file configures Claude Desktop to use the MCP server. Create this file in the project root with the following structure:

```json
{
  "mcpServers": {
    "servicenow-knowledge": {
      "command": "/YOUR/ABSOLUTE/PATH/TO/ServiceNow MCP Server/start_mcp_server_with_env.sh",
      "args": []
    }
  }
}
```

**Steps to create:**
1. Copy the template above
2. Replace `/YOUR/ABSOLUTE/PATH/TO/ServiceNow MCP Server` with your actual project path
3. Save as `claude_desktop_config.json` in the project root

## Environment Variables Reference

| Variable | Description | Example |
|----------|-------------|---------|
| `SERVICENOW_INSTANCE_URL` | Your ServiceNow instance URL | `https://dev123456.service-now.com/` |
| `SERVICENOW_CLIENT_ID` | OAuth client ID from ServiceNow | `f0e88a3502064e86b97529109736128f` |
| `SERVICENOW_CLIENT_SECRET` | OAuth client secret from ServiceNow | `#0\|g]U]62Jb^N20:uy2@.):LKU{u{}+k` |
| `JWT_SECRET_KEY` | Secret key for JWT token signing | `your-secure-random-key` |
| `JWT_ALGORITHM` | JWT signing algorithm | `HS256` |
| `JWT_EXPIRATION_HOURS` | JWT token expiration time | `24` |
| `LOG_LEVEL` | Logging level | `info`, `debug`, `warning`, `error` |
| `LOG_FORMAT` | Log output format | `json`, `text` |

## Security Notes

- These files contain sensitive information and should never be committed to version control
- The `.gitignore` file is configured to exclude these files
- Keep your ServiceNow credentials secure and rotate them regularly
- Use a strong, unique JWT secret key

## Quick Setup

1. Clone the repository
2. Create your personal configuration files using the templates above
3. Update all paths and credentials in both files
4. Make the shell script executable: `chmod +x start_mcp_server_with_env.sh`
5. Test the setup: `./start_mcp_server_with_env.sh`

## Troubleshooting

- Ensure all paths are absolute paths, not relative
- Check that the virtual environment exists at the specified path
- Verify ServiceNow credentials are correct
- Ensure the shell script has execute permissions
